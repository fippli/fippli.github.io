{"version":3,"sources":["MarkdownViewer/index.jsx","components/Tags.jsx","Blog/Blogpost.jsx","Blog/utils/getDateString.js","store/AppState.js","api/useBlogPosts.js","components/Title.jsx","components/Layout.jsx","Blog/utils/descending.js","Blog/index.jsx","AppRoutes.jsx","store/initialState.js","store/posts.js","store/reducer.js","App.jsx","serviceWorker.js","index.js"],"names":["showdown","setOption","converter","Converter","MarkdownViewer","props","markdown","viewerRef","useRef","useEffect","root","console","log","current","children","filter","child","nodeName","map","forEach","codeNode","hljs","highlightBlock","style","styles","wrapper","ref","dangerouslySetInnerHTML","__html","makeHtml","width","TagWrapper","styled","div","Tag","tag","Wrapper","Tags","tags","TitleWrapper","h2","InfoWrapper","Link","a","StyledLink","Date","span","TitleRow","title","link","href","InfoRow","date","created","repository","className","toUTCString","split","slice","join","Blogpost","id","content","AppContext","createContext","useBlogPosts","posts","search","state","useContext","searchInput","undefined","includes","post","superSearch","numberOfMatches","Title","h1","HeaderWrapper","header","FooterWrapper","footer","Main","main","IconList","Icon","Header","Footer","Layout","descending","b","Feed","Input","input","Blog","blogposts","dispatch","placeholder","onChange","event","type","payload","target","value","sort","AppRoutes","exact","path","element","initialState","reducer","action","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f652f617.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport showdown from \"showdown\";\nimport hljs from \"highlight.js\";\n\nshowdown.setOption(\"tasklists\", true);\nconst converter = new showdown.Converter();\n\nconst MarkdownViewer = (props) => {\n  const { markdown } = props;\n\n  const viewerRef = useRef(null);\n\n  const findCodeNodes = (root) => {\n    return [...root.children]\n      .filter((child) => {\n        console.log(child);\n        return child.nodeName === \"PRE\";\n      })\n      .map((child) => child.children[0]);\n  };\n\n  useEffect(() => {\n    console.log(viewerRef);\n    if (viewerRef.current) {\n      console.log(\"viewerRef updated\");\n      const codeNodes = findCodeNodes(viewerRef.current);\n      codeNodes.forEach((codeNode) => {\n        hljs.highlightBlock(codeNode);\n      });\n    }\n  }, [viewerRef]);\n\n  return (\n    <div\n      style={styles.wrapper}\n      ref={viewerRef}\n      dangerouslySetInnerHTML={{\n        __html: converter.makeHtml(markdown),\n      }}\n    />\n  );\n};\n\nexport default MarkdownViewer;\n\nconst styles = {\n  wrapper: {\n    width: \"100%\",\n  },\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TagWrapper = styled.div`\n  background-color: var(--blue);\n  border-radius: 100px;\n  padding: 3px 7px;\n  color: #ffffff;\n  font-weight: 900;\n  margin-right: 5px;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Tag = (tag) => <TagWrapper>{tag}</TagWrapper>;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nconst Tags = ({ tags }) => <Wrapper>{tags.map(Tag)}</Wrapper>;\n\nexport default Tags;\n","import MarkdownViewer from \"../MarkdownViewer\";\nimport { getDateString } from \"./utils/getDateString\";\nimport Tags from \"../components/Tags\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  width: 100%;\n  margin-bottom: 64px;\n`;\n\nconst TitleWrapper = styled.h2`\n  font-size: 2rem;\n  font-weight: 900;\n  width: 100%;\n  margin-bottom: 0;\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: var(--blue);\n  :hover {\n    color: var(--red);\n  }\n`;\n\nconst StyledLink = styled.a`\n  color: #000000;\n  width: 100%;\n  text-decoration: none;\n  :hover {\n    color: var(--blue);\n    border-bottom: 4px solid var(--blue);\n  }\n`;\n\nconst Date = styled.span`\n  fontsize: 1.4rem;\n  font-weight: 400;\n  fontfamily: Montserrat;\n  color: #33333366;\n  margin-left: 20px;\n`;\n\nconst TitleRow = ({ title, link }) => {\n  return (\n    <TitleWrapper>\n      <StyledLink href={link}>{title}</StyledLink>\n    </TitleWrapper>\n  );\n};\nconst InfoRow = ({ tags, created, repository }) => {\n  return (\n    <InfoWrapper>\n      <Tags tags={tags} />\n      <div>\n        <Link href={repository}>\n          <i className=\"fab fa-github\" />\n        </Link>\n      </div>\n\n      <Date>{getDateString(created)}</Date>\n    </InfoWrapper>\n  );\n};\n\nexport const Blogpost = ({\n  id,\n  content,\n  title,\n  link,\n  created,\n  tags,\n  repository,\n}) => {\n  return (\n    <Wrapper key={id}>\n      <TitleRow title={title} link={link} tags={tags} />\n\n      <MarkdownViewer markdown={content} />\n\n      <InfoRow tags={tags} created={created} repository={repository} />\n    </Wrapper>\n  );\n};\n","export const getDateString = (date) => {\n  const d = new Date(date);\n  return d.toUTCString().split(\" \").slice(1, 4).join(\" \");\n};\n","import { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","import { useContext, useEffect } from \"react\";\nimport AppContext from \"../store/AppState.js\";\nimport { superSearch } from \"@codewell/super-search\";\n// import { useFetch } from \"./useFetch.js\";\n\nconst filter = (posts, search) => {\n  console.log(\">>> search\", search);\n  if ([undefined, null, \"\"].includes(search)) return posts;\n\n  return posts.filter(\n    (post) => superSearch()(search, post).numberOfMatches > 0\n  );\n};\n\nexport const useBlogPosts = () => {\n  // const fetcher = useFetch(\"/posts\");\n  const { state } = useContext(AppContext);\n\n  // useEffect(() => {\n  //   fetcher({ mehtod: \"get\" }).then((data) => {\n  //     dispatch({ type: \"SET_POSTS\", payload: data });\n  //   });\n  // }, [dispatch, fetcher]);\n\n  return filter(state.posts, state.searchInput);\n};\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  font-size: 12rem;\n  font-family: Anton, sans-serif;\n  text-align: center;\n  color: var(--red);\n  text-shadow: 10px 10px var(--blue);\n  letter-spacing: 25px;\n  margin: 0;\n`;\n","import styled from \"styled-components\";\n\nimport { Title } from \"../components/Title\";\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst FooterWrapper = styled.footer`\n  width: 100%;\n  min-height: 128px;\n  background-color: #f9f9f9;\n  margin-top: 128px;\n`;\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst IconList = styled.div`\n  display: flex;\n  flex-direction: wrapper;\n  font-size: 3rem;\n`;\n\nconst Icon = styled.a`\n  color: #444444;\n  margin-right: 30px;\n`;\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Title>FIPPLI</Title>\n      <IconList>\n        <Icon href=\"https://github.com/fippli\">\n          <i className=\"fab fa-github\" />\n        </Icon>\n        <Icon href=\"https://www.linkedin.com/in/filip-johansson-036b9984/\">\n          <i className=\"fab fa-linkedin\" />\n        </Icon>\n      </IconList>\n    </HeaderWrapper>\n  );\n};\n\nconst Footer = () => {\n  return <FooterWrapper></FooterWrapper>;\n};\n\nexport const Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <Main>{children}</Main>\n      <Footer />\n    </>\n  );\n};\n","export const descending = (a, b) => {\n  if (a.created < b.created) {\n    return 1;\n  }\n  if (a.created > b.created) {\n    return -1;\n  }\n  return 0;\n};\n","import { Blogpost } from \"./Blogpost.jsx\";\nimport { useBlogPosts } from \"../api/useBlogPosts.js\";\nimport { Layout } from \"../components/Layout.jsx\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport AppContext from \"../store/AppState.js\";\nimport { descending } from \"./utils/descending.js\";\n\nconst Feed = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 700px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  border-radius: 100px;\n  background-color: #e9e9e9;\n  padding: 10px 20px;\n  border: none;\n  font-size: 18px;\n  font-weight: 700;\n  margin-top: 36px;\n`;\n\nexport const Blog = () => {\n  const blogposts = useBlogPosts();\n  const { dispatch } = useContext(AppContext);\n\n  const handleInput = (event) =>\n    dispatch({ type: \"SET_SEARCH_INPUT\", payload: event.target.value });\n\n  return (\n    <Layout>\n      <Input placeholder=\"filter...\" onChange={handleInput} />\n      <Feed>{blogposts.sort(descending).map(Blogpost)}</Feed>\n    </Layout>\n  );\n};\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Blog } from \"./Blog/index.jsx\";\n\nexport const AppRoutes = () => (\n  <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<Blog />} />\n    </Routes>\n  </BrowserRouter>\n);\n","import { posts } from \"./posts.js\";\n\nexport const initialState = {\n  searchInput: \"\",\n  posts,\n};\n","export const posts = [\n  {\n    id: \"1\",\n    title: \"Playing Cards\",\n    link: \"https://fippli.se/playing-cards\",\n    created: 1640082699673,\n    tags: [\"HTML\", \"CSS\", \"JavaScript\"],\n    content: \"I created playing cards in HTML, CSS and JavaScript.\",\n    repository: \"\",\n  },\n  {\n    id: \"2\",\n    title: \"Galaxy Animation\",\n    link: \"https://fippli.se/galaxy-animation\",\n    created: 1640082699673,\n    tags: [\"HTML\", \"CSS\", \"JavaScript\"],\n    content:\n      \"Found a cool galaxy animation that I rewrote from object orientation to functional.\",\n    repository: \"https://github.com/fippli/galaxy-animation\",\n  },\n  {\n    id: \"3\",\n    title: \"Pong\",\n    link: \"https://fippli.se/fipplipong\",\n    created: 1640082699673,\n    tags: [\"HTML\", \"CSS\", \"JavaScript\", \"Game\"],\n    content: \"My own little version of the calssic game.\",\n    repository: \"https://github.com/fippli/fipplipong\",\n  },\n  {\n    id: \"4\",\n    title: \"Plankton\",\n    link: \"https://fippli.se/plankton\",\n    created: 1640082699673,\n    tags: [\"HTML\", \"CSS\", \"JavaScript\", \"Game\"],\n    content: \"A little game...\",\n    repository: \"https://github.com/fippli/plankton\",\n  },\n  {\n    id: \"5\",\n    title: \"QR Code Generator\",\n    link: \"https://fippli.se/qr\",\n    created: 1649064597545,\n    tags: [\"HTML\", \"CSS\", \"JavaScript\", \"Utility\"],\n    content: \"Minimalistic QR code generator.\",\n    repository: \"https://github.com/fippli/qr\",\n  },\n  {\n    id: \"6\",\n    title: \"Lilldag\",\n    link: \"https://fippli.se/lilldag\",\n    created: 1649064597545,\n    tags: [\"HTML\", \"CSS\", \"JavaScript\", \"Utility\"],\n    content: 'Know what \"lilldag\" it is.',\n    repository: \"https://github.com/fippli/lilldag\",\n  },\n];\n","export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_SEARCH_INPUT\": {\n      return { ...state, searchInput: action.payload };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { useReducer } from \"react\";\nimport { AppRoutes } from \"./AppRoutes.jsx\";\nimport AppContext from \"./store/AppState\";\nimport { initialState } from \"./store/initialState.js\";\nimport { reducer } from \"./store/reducer.js\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      <AppRoutes />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}